Keywords: programmieren, software development, software engineer, software developer, programmierung
Description: Ich setze mehr als 20 Jahre Erfahrung in der professionellen Programmierung von Software ein, um für ihr Projekt das optimale Ergebnis zu liefern.
Link text: Programmierung
Icon: laptop

%hgroup
  %h1= @page.link_text
  %h2= @page.description

%figure.large-3.left
  %img.polaroid{ src:image_path('green-crt.jpg'), alt:'Alter Computer' }
  %figcaption Im Wandel der Zeit: Wie sieht ihre IT in 30 Jahren aus?

:markdown
  Seit über 20 Jahren biete ich professionelles Software Development an. Dabei habe ich mich sehr bald auf die Programmierung von Internet-Software spezialisiert. Nutzen Sie meine Erfahrung als Entwickler, Berater und Projektmanager!

  Ich habe gelernt, dass Komplexität zu den Risiken eines Softwareprojektes zählt, da ein zu komplexes Projekt unbeherrschbar wird. In der Folge kann es nicht mehr zuverlässig betrieben oder weiterentwickelt werden und muß früher oder später von Grund auf neu gestartet werden. Das bisherige Investment in Zeit und Geld ist damit verloren.

  Meine Aufgabe als _software engineer_ ist es, ihre fachlichen Anforderungen in technische Systeme umzusetzen. Dabei kommt es nicht nur auf das korrekte Endergebnis an, sondern in besonderem Maß auch darauf, dass mein Kunde das Ergebnis verstehen und damit nutzen kann.

  ## Komplexität erfordert Erfahrung

  > Fehlersuche ist doppelt so schwer wie das Schreiben des urspünglichen Codes. Wenn Sie den
  > ursprünglichen Code also so trickreich wie irgend möglich verfassen, werden Sie am Ende nicht schlau
  > genug sein, um darin nach Fehlern zu suchen.
  > <cite>Brian W. Kernighan, P. J. Plauger<br>in The Elements of Programming Style (1978)</cite>

  Was Kerninghan und Plauger bereits 1978 formulierten, hat immer noch Bedeutung. Wenn Programmierung zur Kunstform wird und Komplexität als Ausdruck von Bedeutsamkeit missverstanden wird, dann besteht das Risiko, dass unvermeidlich enthaltene Fehler in der Software schwer zu entdecken und zu beheben sind.

  ## So einfach wie möglich…

%figure.large-3.right
  %img.polaroid{ src:image_path('travel_agency_fmc.png'), alt:'FMC-Diagramm' }
  %figcaption Mit FMC können Systeme verständlich dargestellt werden.

:markdown
  Technische Diskussionen neigen dazu, von allein komplizierter zu werden als ursprünglich angenommen. Ich lege großen Wert auf eine Beschränkung auf das Wesentliche, lesbare Dokumentation und saubere Konzepte. Dabei nutze ich bildliche Verfahren wie [UML](http://de.wikipedia.org/wiki/Unified_Modeling_Language), [FMC](http://de.wikipedia.org/wiki/Fundamental_Modeling_Concepts) oder [Mindmaps](http://de.wikipedia.org/wiki/Mindmapping), um Sachverhalte verständlich zu kommunizieren.

  ## … so kompliziert wie nötig.

  Durch Verwendung vorgefertigter Komponenten lässt sich in der Software-Entwicklung Zeit und dadurch Geld sparen. Man darf aber nicht übersehen, dass durch die arglose Verwendung eines vorgefertigten Moduls möglicherweise viele zehntausend Zeilen Quelltext zum eigenen Projekt hinzufügt werden. *Automatisierte Tests* helfen, die Zuverlässigkeit des Gesamtsystems in allen Entwicklungsschritten zu überwachen.
